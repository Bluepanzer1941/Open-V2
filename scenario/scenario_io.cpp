#include "scenario_io.h"
#include "population/population_functions.h"

namespace scenario {
	void read_scenario(scenario_manager& s, const directory& root) {
		//stage 1
		events::event_creation_manager ecm;

		graphics::name_maps gobj_nmaps;
		ui::load_gui_from_directory(root, s.gui_m, gobj_nmaps);

		//stage 2
		messages::init_message_text(s);

		auto const country_files = cultures::read_national_tags(s.culture_m, root);
		cultures::read_religions(s.culture_m, root, s.gui_m.text_data_sequences);
		cultures::read_cultures(s.culture_m, s.gui_m.textures, root, s.gui_m.text_data_sequences);

		economy::read_goods(s.economy_m, root, s.gui_m.text_data_sequences);
		auto building_production_map = economy::read_buildings(s.economy_m, root, s.gui_m.text_data_sequences, s.modifiers_m);

		auto const ideology_state = ideologies::pre_parse_ideologies(s.ideologies_m, root, s.gui_m.text_data_sequences);

		auto const issues_state = issues::pre_parse_issues(s.issues_m, root, s.gui_m.text_data_sequences);

		auto const government_names = governments::read_governments(s.governments_m, root, s.gui_m.text_data_sequences, s.ideologies_m);

		military::parsing_state military_state(s, ecm);
		// military::pre_parse_unit_types(military_state, root);
		military::pre_parse_cb_types(military_state, root);
		military::read_leader_traits(military_state, root);

		modifiers::parsing_state modifiers_state(s.gui_m.text_data_sequences, s.modifiers_m);
		modifiers::read_defines(s.modifiers_m, root);
		modifiers::pre_parse_crimes(modifiers_state, root);
		modifiers::pre_parse_triggered_modifiers(modifiers_state, root);
		modifiers::read_national_values(modifiers_state, root);
		modifiers::read_static_modifiers(modifiers_state, root);
		modifiers::read_event_modifiers(modifiers_state, root);

		population::parsing_state pop_state(s.gui_m.text_data_sequences, s.population_m);
		population::pre_parse_pop_types(s.population_m, root, s.gui_m.text_data_sequences);
		population::pre_parse_rebel_types(pop_state, root);

		provinces::parsing_state province_state(s.gui_m.text_data_sequences, s.province_m, s.modifiers_m);
		provinces::read_default_map_file(province_state, root);

		provinces::read_terrain_modifiers(s.gui_m.text_data_sequences, s.province_m, s.modifiers_m, gobj_nmaps, root);
		provinces::read_states(province_state, root);
		provinces::read_continents(province_state, root);
		provinces::read_climates(province_state, root);

		//sound::populate_music(s.sound_m, root);
		//sound::read_effects(s.sound_m, s.gui_m.text_data_sequences, root);

		technologies::parsing_state tech_state(s.gui_m.text_data_sequences, root, s.technology_m, s.modifiers_m, s.gui_m.textures);
		technologies::pre_parse_technologies(tech_state, root);
		technologies::pre_parse_inventions(tech_state, root);

		// stage 3

		governments::ready_party_issues(s.governments_m, s.issues_m);

		cultures::read_country_files(country_files, s, root);
		cultures::read_flag_graphics(s, root);
		cultures::populate_country_names(s, government_names);

		economy::read_production_types(s, building_production_map, root);

		ideologies::read_ideologies(s, ideology_state);

		issues::read_issue_options(issues_state, s, ecm);

		// military::read_unit_types(military_state, s.military_m, s.economy_m, s.sound_m, s.gui_m.text_data_sequences);
		military::read_cb_types(military_state);

		modifiers::read_crimes(modifiers_state, s);
		modifiers::read_triggered_modifiers(modifiers_state, s);
		modifiers::read_national_focuses(s, root);

		population::read_main_poptype_file(s, root);
		population::read_poptypes(s, root);
		population::read_rebel_types(pop_state, s, ecm);

		events::read_on_actions_file(s, ecm, root);
		events::read_event_files(s, ecm, root);
		events::read_decision_files(s, ecm, root);

		technologies::prepare_technologies_read(s);
		technologies::read_inventions(tech_state, s);
		technologies::read_technologies(tech_state, s);

		governments::setup_party_rules(s);
		population::determine_farmer_and_laborer(s);
		// stage 4

		commit_pending_triggered_events(s, ecm, root);

		prepare_fixed_ui_text(s);
	}

	void prepare_fixed_ui_text(scenario_manager& s) {
		s.fixed_ui_text.resize(fixed_ui::count);

		s.fixed_ui_text[fixed_ui::expires_on] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "EXPIRES_ON");
		s.fixed_ui_text[fixed_ui::slave_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_SLAVE_STATE");
		s.fixed_ui_text[fixed_ui::colonial_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_COLONY");
		s.fixed_ui_text[fixed_ui::protectorate_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_PROTECTORATE");
		s.fixed_ui_text[fixed_ui::colonial_province_upgrade] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_COLONY_STATE");
		s.fixed_ui_text[fixed_ui::protectorate_province_upgrade] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_UPGRADE_TO_COLONY");
		s.fixed_ui_text[fixed_ui::province_view_admin] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_ADMIN");
		s.fixed_ui_text[fixed_ui::province_view_admin_base] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_ADMIN_BASE");
		s.fixed_ui_text[fixed_ui::province_view_admin_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_ADMIN_TECH");
		s.fixed_ui_text[fixed_ui::province_view_admin_pops] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_ADMIN_POPS");
		s.fixed_ui_text[fixed_ui::controller] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_CONTROLLER");
		s.fixed_ui_text[fixed_ui::flashpoint_tension] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FLASHPOINT_TENSION");
		s.fixed_ui_text[fixed_ui::has_no_flashpoint] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "HAS_NO_FLASHPOINT");
		s.fixed_ui_text[fixed_ui::province_liferating] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_LIFERATING");
		s.fixed_ui_text[fixed_ui::siege_progress] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_SIEGE_PROGRESS");
		s.fixed_ui_text[fixed_ui::owner_presence] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROVINCEVIEW_RGOOWNER");
		s.fixed_ui_text[fixed_ui::other] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_OTHER_CULT");
		s.fixed_ui_text[fixed_ui::open_pop_screen] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PW_OPEN_POPSCREEN");
		s.fixed_ui_text[fixed_ui::colonial_investment_cost] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COLONY_INVEST_COST");
		s.fixed_ui_text[fixed_ui::province_view_state_non_cores] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "STATE_NONCORES");
		s.fixed_ui_text[fixed_ui::great_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "great_power");
		s.fixed_ui_text[fixed_ui::secondary_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "second_power");
		s.fixed_ui_text[fixed_ui::civilized_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "civ_nation");
		s.fixed_ui_text[fixed_ui::uncivilized_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unciv_nation");
		s.fixed_ui_text[fixed_ui::partialy_civilized_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "DIPLOMACY_ALMOST_WESTERN_NATION_STATUS");
		s.fixed_ui_text[fixed_ui::prestige] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RANK_PRESTIGE");
		s.fixed_ui_text[fixed_ui::military_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RANK_MILITARY");
		s.fixed_ui_text[fixed_ui::industrial_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RANK_INDUSTRY");
		s.fixed_ui_text[fixed_ui::is_mobilized] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "IS_MOBILIZED_IRO");
		s.fixed_ui_text[fixed_ui::sphere] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "DIPLOMACY_SPHERE_LABEL");
		s.fixed_ui_text[fixed_ui::sphere_leader] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "SPHERE_LEADER");
		s.fixed_ui_text[fixed_ui::puppets] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRY_PUPPETS_LIST");
		s.fixed_ui_text[fixed_ui::liege] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TRIGGER_OVERLORD");
		s.fixed_ui_text[fixed_ui::fort] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_FORT");
		s.fixed_ui_text[fixed_ui::naval_base] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_NAVALBASE");
		s.fixed_ui_text[fixed_ui::railroad] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_RAILROAD");
		s.fixed_ui_text[fixed_ui::workforce] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WORKFORCE_DISTTITLE");
		s.fixed_ui_text[fixed_ui::religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RELIGION_DISTTITLE");
		s.fixed_ui_text[fixed_ui::ideology] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "IDEOLOGY_DISTTITLE");
		s.fixed_ui_text[fixed_ui::nationality] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NATIONALITY_DISTTITLE");
		s.fixed_ui_text[fixed_ui::dominant_issues] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "DOMINANT_ISSUES_DISTTITLE");
		s.fixed_ui_text[fixed_ui::electorate] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ELECTORATE_DISTTITLE");
		s.fixed_ui_text[fixed_ui::unemployment] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "UNEMPLOYMENT");
		s.fixed_ui_text[fixed_ui::life_needs] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LIFE_NEEDS");
		s.fixed_ui_text[fixed_ui::everyday_needs] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "EVERYDAY_NEEDS");
		s.fixed_ui_text[fixed_ui::luxury_needs] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LUXURY_NEEDS");
		s.fixed_ui_text[fixed_ui::no_closed_factories] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_HasClosedFactories");
		s.fixed_ui_text[fixed_ui::closed_factories] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_HasClosedFactories");
		s.fixed_ui_text[fixed_ui::unemployed_workers] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_HasUnemployedWorkers");
		s.fixed_ui_text[fixed_ui::no_unemployed_workers] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_HasUnemployedWorkers");
		s.fixed_ui_text[fixed_ui::building_factories] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_IsBuildingFactories");
		s.fixed_ui_text[fixed_ui::not_building_factories] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_IsBuildingFactories");
		s.fixed_ui_text[fixed_ui::no_research] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECHNOLOGYVIEW_NO_RESEARCH");
		s.fixed_ui_text[fixed_ui::optimal_is] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PV_CLERGY_LIT_DESC2");
		s.fixed_ui_text[fixed_ui::can_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_CanDoReforms");
		s.fixed_ui_text[fixed_ui::cannot_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_CanDoReforms");
		s.fixed_ui_text[fixed_ui::has_decisions] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_CanDoDecisions");
		s.fixed_ui_text[fixed_ui::no_decisions] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REMOVE_COUNTRYALERT_NO_CanDoDecisions");
		s.fixed_ui_text[fixed_ui::holding_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_IsInElection");
		s.fixed_ui_text[fixed_ui::no_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_IsInElection");
		s.fixed_ui_text[fixed_ui::has_rebels] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_HaveRebels");
		s.fixed_ui_text[fixed_ui::no_rebels] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_HaveRebels");
		s.fixed_ui_text[fixed_ui::is_not_gp] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_GPStatus");
		s.fixed_ui_text[fixed_ui::is_not_losing_gp] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_LoosingGPStatus");
		s.fixed_ui_text[fixed_ui::is_losing_gp] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_LoosingGPStatus");
		s.fixed_ui_text[fixed_ui::cannot_influence] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_CanIncreaseOpinion");
		s.fixed_ui_text[fixed_ui::can_influence] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_CanIncreaseOpinion");
		s.fixed_ui_text[fixed_ui::no_crisis_alert] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_Crisis");
		s.fixed_ui_text[fixed_ui::has_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_Crisis");
		s.fixed_ui_text[fixed_ui::protectorate_pending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_ColonialGood_protectorate");
		s.fixed_ui_text[fixed_ui::colony_pending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_ColonialGood_colony");
		s.fixed_ui_text[fixed_ui::state_pending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_ColonialGood_state");
		s.fixed_ui_text[fixed_ui::colonial_investment_pending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_ColonialGood_invest");
		s.fixed_ui_text[fixed_ui::losing_colonial_race] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_ColonialBad_influence");
		s.fixed_ui_text[fixed_ui::no_colonial_activity] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COUNTRYALERT_NO_Colonial");
		s.fixed_ui_text[fixed_ui::at_peace] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ATPEACE");
		s.fixed_ui_text[fixed_ui::month_1] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "January");
		s.fixed_ui_text[fixed_ui::month_2] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "February");
		s.fixed_ui_text[fixed_ui::month_3] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "March");
		s.fixed_ui_text[fixed_ui::month_4] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "April");
		s.fixed_ui_text[fixed_ui::month_5] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "May");
		s.fixed_ui_text[fixed_ui::month_6] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "June");
		s.fixed_ui_text[fixed_ui::month_7] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "July");
		s.fixed_ui_text[fixed_ui::month_8] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "August");
		s.fixed_ui_text[fixed_ui::month_9] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "September");
		s.fixed_ui_text[fixed_ui::month_10] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "October");
		s.fixed_ui_text[fixed_ui::month_11] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "November");
		s.fixed_ui_text[fixed_ui::month_12] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "December");
		s.fixed_ui_text[fixed_ui::can_appoint_ruling_party] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CAN_APPOINT_RULING_PARTY");
		s.fixed_ui_text[fixed_ui::next_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NEXT_ELECTION");
		s.fixed_ui_text[fixed_ui::plurality] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "plurality");
		s.fixed_ui_text[fixed_ui::revanchism] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "revanchism");
		s.fixed_ui_text[fixed_ui::cannot_hold_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CANNOT_HOLD_ELECTION_TOOLTIP");
		s.fixed_ui_text[fixed_ui::already_holding_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_ALREADY_HOLDING_ELECTION_TOOLTIP");
		s.fixed_ui_text[fixed_ui::can_social_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_DO_SOCIAL_REFROMS");
		s.fixed_ui_text[fixed_ui::cannot_social_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_NOT_DO_SOCIAL_REFROMS");
		s.fixed_ui_text[fixed_ui::can_social_revoke] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_REVOKE_SOCIAL_REFROMS");
		s.fixed_ui_text[fixed_ui::can_political_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_DO_POLITICAL_REFROMS");
		s.fixed_ui_text[fixed_ui::cannot_political_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_NOT_DO_POLITICAL_REFROMS");
		s.fixed_ui_text[fixed_ui::can_political_revoke] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CAN_REVOKE_POLITICAL_REFROMS");
		s.fixed_ui_text[fixed_ui::every] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "EVERY");
		s.fixed_ui_text[fixed_ui::any] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ANY");
		s.fixed_ui_text[fixed_ui::random] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RANDOM");
		s.fixed_ui_text[fixed_ui::neighboring_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "neighboring_province");
		s.fixed_ui_text[fixed_ui::where] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WHERE");
		s.fixed_ui_text[fixed_ui::neighboring_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "neighboring_nation");
		s.fixed_ui_text[fixed_ui::nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NATION");
		s.fixed_ui_text[fixed_ui::empty_neighboring_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "empty_neighboring_province");
		s.fixed_ui_text[fixed_ui::poor_strata_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_strata_pop");
		s.fixed_ui_text[fixed_ui::middle_strata_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_strata_pop");
		s.fixed_ui_text[fixed_ui::rich_strata_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_strata_pop");
		s.fixed_ui_text[fixed_ui::pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop");
		s.fixed_ui_text[fixed_ui::owned_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owned_province");
		s.fixed_ui_text[fixed_ui::singular_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "singular_nation");
		s.fixed_ui_text[fixed_ui::singular_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "singular_state");
		s.fixed_ui_text[fixed_ui::singular_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "singular_province");
		s.fixed_ui_text[fixed_ui::singular_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "singular_pop");
		s.fixed_ui_text[fixed_ui::core_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "core_of");
		s.fixed_ui_text[fixed_ui::state_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "state_of");
		s.fixed_ui_text[fixed_ui::one_of_the_following] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "one_of_the_following");
		s.fixed_ui_text[fixed_ui::chance_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "chance_of");
		s.fixed_ui_text[fixed_ui::owner_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owner_of");
		s.fixed_ui_text[fixed_ui::controller_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "controller_of");
		s.fixed_ui_text[fixed_ui::location_of_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "location_of_pop");
		s.fixed_ui_text[fixed_ui::nation_of_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nation_of_pop");
		s.fixed_ui_text[fixed_ui::capital_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "capital_of");
		s.fixed_ui_text[fixed_ui::this_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation");
		s.fixed_ui_text[fixed_ui::this_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_state");
		s.fixed_ui_text[fixed_ui::this_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_province");
		s.fixed_ui_text[fixed_ui::this_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_pop");
		s.fixed_ui_text[fixed_ui::from_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nation");
		s.fixed_ui_text[fixed_ui::from_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_state");
		s.fixed_ui_text[fixed_ui::from_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_province");
		s.fixed_ui_text[fixed_ui::from_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_pop");
		s.fixed_ui_text[fixed_ui::adjacent_sea] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "adjacent_sea");
		s.fixed_ui_text[fixed_ui::cultural_union_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cultural_union_of");

		s.fixed_ui_text[fixed_ui::overlord_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "overlord_of");
		s.fixed_ui_text[fixed_ui::sphere_leader_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "sphere_leader_of");
		s.fixed_ui_text[fixed_ui::crisis_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "crisis_state");
		s.fixed_ui_text[fixed_ui::containing_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "containing_state");
		s.fixed_ui_text[fixed_ui::province_in] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "province_in");
		s.fixed_ui_text[fixed_ui::reb_independence_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "reb_independence_nation");
		s.fixed_ui_text[fixed_ui::flashpoint_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "flashpoint_nation");
		s.fixed_ui_text[fixed_ui::no_effect] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_EFFECT");
		s.fixed_ui_text[fixed_ui::move_capital_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "move_capital_to");
		s.fixed_ui_text[fixed_ui::add_x_core] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_x_core");
		s.fixed_ui_text[fixed_ui::add_core_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_core_to");
		s.fixed_ui_text[fixed_ui::rebel] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rebel");
		s.fixed_ui_text[fixed_ui::remove_x_core] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_x_core");
		s.fixed_ui_text[fixed_ui::remove_core_from] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_core_from");
		s.fixed_ui_text[fixed_ui::change_name_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_name_to");
		s.fixed_ui_text[fixed_ui::change_rgo_production_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_rgo_production_to");
		s.fixed_ui_text[fixed_ui::make_accepted_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_accepted_culture");
		s.fixed_ui_text[fixed_ui::primary_culture_changes_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "primary_culture_changes_to");
		s.fixed_ui_text[fixed_ui::union_culture_accepted] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "union_culture_accepted");
		s.fixed_ui_text[fixed_ui::this_nation_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation_culture");
		s.fixed_ui_text[fixed_ui::this_nation_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nation_culture");
		s.fixed_ui_text[fixed_ui::remove_accepted_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_accepted_culture");
		s.fixed_ui_text[fixed_ui::life_rating] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "life_rating");
		s.fixed_ui_text[fixed_ui::make_national_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_national_religion");
		s.fixed_ui_text[fixed_ui::make_slave_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_slave_state");
		s.fixed_ui_text[fixed_ui::make_slave_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_slave_pop");
		s.fixed_ui_text[fixed_ui::research_points] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "research_points");
		s.fixed_ui_text[fixed_ui::change_tech_school] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_tech_school");
		s.fixed_ui_text[fixed_ui::change_government_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_government_to");
		s.fixed_ui_text[fixed_ui::add_to_treasury] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_to_treasury");
		s.fixed_ui_text[fixed_ui::war_exhaustion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "war_exhaustion");
		s.fixed_ui_text[fixed_ui::become_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "become_blank");
		s.fixed_ui_text[fixed_ui::cultural_union_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cultural_union_nation");
		s.fixed_ui_text[fixed_ui::player_control_change] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "player_control_change");
		s.fixed_ui_text[fixed_ui::set_national_flag] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "set_national_flag");
		s.fixed_ui_text[fixed_ui::remove_national_flag] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_national_flag");
		s.fixed_ui_text[fixed_ui::infamy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "infamy");
		s.fixed_ui_text[fixed_ui::change_province_owner] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_province_owner");
		s.fixed_ui_text[fixed_ui::annex_effect] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "annex_effect");
		s.fixed_ui_text[fixed_ui::annexed_by_effect] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "annexed_by_effect");
		s.fixed_ui_text[fixed_ui::core_return] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "core_return");
		s.fixed_ui_text[fixed_ui::core_return_short] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "core_return_short");
		s.fixed_ui_text[fixed_ui::change_province_controller] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_province_controller");
		s.fixed_ui_text[fixed_ui::railroad_level] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "railroad_level");
		s.fixed_ui_text[fixed_ui::pop_savings] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_savings");
		s.fixed_ui_text[fixed_ui::leadership_points] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "leadership_points");
		s.fixed_ui_text[fixed_ui::release_as_vassal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "release_as_vassal");
		s.fixed_ui_text[fixed_ui::end_alliance] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "end_alliance");
		s.fixed_ui_text[fixed_ui::end_war_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "end_war_with");
		s.fixed_ui_text[fixed_ui::enable_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "enable_blank");
		s.fixed_ui_text[fixed_ui::change_ruling_party] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_ruling_party");
		s.fixed_ui_text[fixed_ui::remove_prov_mod] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_prov_mod");
		s.fixed_ui_text[fixed_ui::remove_nat_mod] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_nat_mod");
		s.fixed_ui_text[fixed_ui::make_alliance] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_alliance");
		s.fixed_ui_text[fixed_ui::become_independent] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "become_independent");
		s.fixed_ui_text[fixed_ui::release_as_independent] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "release_as_independent");
		s.fixed_ui_text[fixed_ui::set_global_flag] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "set_global_flag");
		s.fixed_ui_text[fixed_ui::remove_global_flag] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_global_flag");
		s.fixed_ui_text[fixed_ui::change_national_value] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_national_value");
		s.fixed_ui_text[fixed_ui::become_civ] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "become_civ");
		s.fixed_ui_text[fixed_ui::become_unciv] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "become_unciv");
		s.fixed_ui_text[fixed_ui::free_slave_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "free_slave_state");
		s.fixed_ui_text[fixed_ui::free_slave_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "free_slave_pop");
		s.fixed_ui_text[fixed_ui::hold_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "hold_election");
		s.fixed_ui_text[fixed_ui::issue_change] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "issue_change");
		s.fixed_ui_text[fixed_ui::add_relative_income] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_relative_income");
		s.fixed_ui_text[fixed_ui::make_neutral] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "make_neutral");
		s.fixed_ui_text[fixed_ui::pop_size] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size");
		s.fixed_ui_text[fixed_ui::move_pop_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "move_pop_to");
		s.fixed_ui_text[fixed_ui::change_pop_type] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "change_pop_type");
		s.fixed_ui_text[fixed_ui::years_of_research] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "years_of_research");
		s.fixed_ui_text[fixed_ui::remove_mil_reforms] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_mil_reforms");
		s.fixed_ui_text[fixed_ui::remove_econ_reforms] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_econ_reforms");
		s.fixed_ui_text[fixed_ui::add_crime] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_crime");
		s.fixed_ui_text[fixed_ui::remove_crime] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_crime");
		s.fixed_ui_text[fixed_ui::perform_nationalization] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "perform_nationalization");
		s.fixed_ui_text[fixed_ui::build_factory_in_capital] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "build_factory_in_capital");
		s.fixed_ui_text[fixed_ui::enable_great_wars] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "enable_great_wars");
		s.fixed_ui_text[fixed_ui::enable_world_wars] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "enable_world_wars");
		s.fixed_ui_text[fixed_ui::disable_great_wars] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "disable_great_wars");
		s.fixed_ui_text[fixed_ui::disable_world_wars] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "disable_world_wars");
		s.fixed_ui_text[fixed_ui::assimilate_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "assimilate_pop");
		s.fixed_ui_text[fixed_ui::assimilate_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "assimilate_province");
		s.fixed_ui_text[fixed_ui::owner_primary_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owner_primary_culture");
		s.fixed_ui_text[fixed_ui::literacy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "literacy");
		s.fixed_ui_text[fixed_ui::add_crisis_interest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_crisis_interest");
		s.fixed_ui_text[fixed_ui::crisis_temperature_plain] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "crisis_temperature_plain");
		s.fixed_ui_text[fixed_ui::militancy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "militancy");
		s.fixed_ui_text[fixed_ui::consciousness] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "consciousness");
		s.fixed_ui_text[fixed_ui::fort_level] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fort_level");
		s.fixed_ui_text[fixed_ui::naval_base_level] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "naval_base_level");
		s.fixed_ui_text[fixed_ui::rgo_size] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rgo_size");
		s.fixed_ui_text[fixed_ui::of_type_plain] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "of_type_plain");
		s.fixed_ui_text[fixed_ui::where_religion_is] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "where_religion_is");
		s.fixed_ui_text[fixed_ui::where_culture_is] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "where_culture_is");
		s.fixed_ui_text[fixed_ui::where_ideology_is] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "where_ideology_is");
		s.fixed_ui_text[fixed_ui::trigger_every_revolt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "trigger_every_revolt");
		s.fixed_ui_text[fixed_ui::diplomatic_influence_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "diplomatic_influence_with");
		s.fixed_ui_text[fixed_ui::relations_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "relations_with");
		s.fixed_ui_text[fixed_ui::add_modifier_until] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_modifier_until");
		s.fixed_ui_text[fixed_ui::add_modifier] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_modifier");
		s.fixed_ui_text[fixed_ui::add_cb_months] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_cb_months");
		s.fixed_ui_text[fixed_ui::add_cb_no_months] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_cb_no_months");
		s.fixed_ui_text[fixed_ui::add_cb_reversed_months] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_cb_reversed_months");
		s.fixed_ui_text[fixed_ui::add_cb_reversed_no_months] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_cb_reversed_no_months");
		s.fixed_ui_text[fixed_ui::remove_cb] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_cb");
		s.fixed_ui_text[fixed_ui::remove_cb_reversed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "remove_cb_reversed");
		s.fixed_ui_text[fixed_ui::no_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "no_nation");
		s.fixed_ui_text[fixed_ui::declare_war_on] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "declare_war_on");
		s.fixed_ui_text[fixed_ui::attacker_wg_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "attacker_wg_label");
		s.fixed_ui_text[fixed_ui::defender_wg_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "defender_wg_label");
		s.fixed_ui_text[fixed_ui::attacker_no_allies] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "attacker_no_allies");
		s.fixed_ui_text[fixed_ui::attacker_yes_allies] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "attacker_yes_allies");
		s.fixed_ui_text[fixed_ui::for_text] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "for_text");
		s.fixed_ui_text[fixed_ui::event_fires] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "event_fires");
		s.fixed_ui_text[fixed_ui::event_fires_in_days] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "event_fires_in_days");
		s.fixed_ui_text[fixed_ui::support_for_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "support_for_blank");
		s.fixed_ui_text[fixed_ui::up_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "up_to");
		s.fixed_ui_text[fixed_ui::scaled_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "scaled_support");
		s.fixed_ui_text[fixed_ui::scaled_unemployment] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "scaled_unemployment");
		s.fixed_ui_text[fixed_ui::stockpile_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "stockpile_of");
		s.fixed_ui_text[fixed_ui::create_general] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "create_general");
		s.fixed_ui_text[fixed_ui::create_admiral] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "create_admiral");
		s.fixed_ui_text[fixed_ui::add_war_goal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "add_war_goal");
		s.fixed_ui_text[fixed_ui::blank_loyalty] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "blank_loyalty");
		s.fixed_ui_text[fixed_ui::in_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in_blank");
		s.fixed_ui_text[fixed_ui::railroad_in_capital] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "railroad_in_capital");
		s.fixed_ui_text[fixed_ui::railroad_in_capital_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "railroad_in_capital_state");
		s.fixed_ui_text[fixed_ui::fort_in_capital] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fort_in_capital");
		s.fixed_ui_text[fixed_ui::fort_in_capital_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fort_in_capital_state");
		s.fixed_ui_text[fixed_ui::set_national_variable_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "set_national_variable_to");
		s.fixed_ui_text[fixed_ui::increase_national_variable_by] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "increase_national_variable_by");
		s.fixed_ui_text[fixed_ui::decrease_national_variable_by] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "decrease_national_variable_by");
	
		s.fixed_ui_text[fixed_ui::cmp_ge] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_ge");
		s.fixed_ui_text[fixed_ui::cmp_le] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_le");
		s.fixed_ui_text[fixed_ui::cmp_gt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_gt");
		s.fixed_ui_text[fixed_ui::cmp_lt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_lt");
		s.fixed_ui_text[fixed_ui::cmp_eq] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_eq");
		s.fixed_ui_text[fixed_ui::cmp_ne] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_ne");
		s.fixed_ui_text[fixed_ui::all_of_the_following] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "all_of_the_following");
		s.fixed_ui_text[fixed_ui::any_of_the_following] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "any_of_the_following");
		s.fixed_ui_text[fixed_ui::nation_at_war_against] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nation_at_war_against");
		s.fixed_ui_text[fixed_ui::core_in] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "core_in");
		s.fixed_ui_text[fixed_ui::substate_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "substate_of");
		s.fixed_ui_text[fixed_ui::nation_in_sphere] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nation_in_sphere");
		s.fixed_ui_text[fixed_ui::cmp_has_ne] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_ne");
		s.fixed_ui_text[fixed_ui::cmp_has_eq] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_eq");
		s.fixed_ui_text[fixed_ui::year] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "year");
		s.fixed_ui_text[fixed_ui::month] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "month");
		s.fixed_ui_text[fixed_ui::a_port] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_port");
		s.fixed_ui_text[fixed_ui::national_rank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "national_rank");
		s.fixed_ui_text[fixed_ui::technology] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "technology");
		s.fixed_ui_text[fixed_ui::strata] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "strata");
		s.fixed_ui_text[fixed_ui::rich] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich");
		s.fixed_ui_text[fixed_ui::poor] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor");
		s.fixed_ui_text[fixed_ui::middle] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle");
		s.fixed_ui_text[fixed_ui::minimum_state_life_raing] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "minimum_state_life_raing");
		s.fixed_ui_text[fixed_ui::an_empy_adj_prov] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_empy_adj_prov");
		s.fixed_ui_text[fixed_ui::belongs_to_same_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "belongs_to_same_state");
		s.fixed_ui_text[fixed_ui::does_not_belong_to_same_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "does_not_belong_to_same_state");
		s.fixed_ui_text[fixed_ui::contains_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "contains_blank");
		s.fixed_ui_text[fixed_ui::does_not_contain_blank] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "does_not_contain_blank");
		s.fixed_ui_text[fixed_ui::times_target_needs_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "times_target_needs_spending");
		s.fixed_ui_text[fixed_ui::unemployment] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unemployment");
		s.fixed_ui_text[fixed_ui::slavery] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "slavery");
		s.fixed_ui_text[fixed_ui::allowed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "allowed");
		s.fixed_ui_text[fixed_ui::a_slave_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_slave_state");
		s.fixed_ui_text[fixed_ui::a_slave] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_slave");
		s.fixed_ui_text[fixed_ui::an_independent_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_independent_nation");
		s.fixed_ui_text[fixed_ui::non_prim_culture_pops] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "non_prim_culture_pops");
		s.fixed_ui_text[fixed_ui::government] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "government");
		s.fixed_ui_text[fixed_ui::capital] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "capital");
		s.fixed_ui_text[fixed_ui::technology_school] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "technology_school");
		s.fixed_ui_text[fixed_ui::primary_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "primary_culture");
		s.fixed_ui_text[fixed_ui::an_accepted_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_accepted_culture");
		s.fixed_ui_text[fixed_ui::culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "culture");
		s.fixed_ui_text[fixed_ui::dominant_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "dominant_culture");
		s.fixed_ui_text[fixed_ui::a_primary_or_accepted] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_primary_or_accepted");
		s.fixed_ui_text[fixed_ui::rebel_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rebel_culture");
		s.fixed_ui_text[fixed_ui::this_nation_prim_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation_prim_culture");
		s.fixed_ui_text[fixed_ui::from_nation_prim_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nation_prim_culture");
		s.fixed_ui_text[fixed_ui::culture_group] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "culture_group");
		s.fixed_ui_text[fixed_ui::rebel_culture_group] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rebel_culture_group");
		s.fixed_ui_text[fixed_ui::this_nation_culture_group] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation_culture_group");
		s.fixed_ui_text[fixed_ui::from_nation_culture_group] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nation_culture_group");
		s.fixed_ui_text[fixed_ui::rebel_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rebel_religion");
		s.fixed_ui_text[fixed_ui::this_nation_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation_religion");
		s.fixed_ui_text[fixed_ui::from_nation_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nation_religion");
		s.fixed_ui_text[fixed_ui::province_terrain] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "province_terrain");
		s.fixed_ui_text[fixed_ui::rgo_production] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rgo_production");
		s.fixed_ui_text[fixed_ui::a_secondary_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_secondary_power");
		s.fixed_ui_text[fixed_ui::owner] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owner");
		s.fixed_ui_text[fixed_ui::an_active_rebel] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_active_rebel");
		s.fixed_ui_text[fixed_ui::a_member_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_member_of");
		s.fixed_ui_text[fixed_ui::unclaimed_cores] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unclaimed_cores");
		s.fixed_ui_text[fixed_ui::a_cultural_union] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_cultural_union");
		s.fixed_ui_text[fixed_ui::union_for_pop] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "union_for_pop");
		s.fixed_ui_text[fixed_ui::union_for_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "union_for_nation");
		s.fixed_ui_text[fixed_ui::the_rebel_ind_nation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "the_rebel_ind_nation");
		s.fixed_ui_text[fixed_ui::capitalists_can_build] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "capitalists_can_build");
		s.fixed_ui_text[fixed_ui::capitalists_cannot_build] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "capitalists_cannot_build");
		s.fixed_ui_text[fixed_ui::at_war] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "at_war");
		s.fixed_ui_text[fixed_ui::owns] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owns");
		s.fixed_ui_text[fixed_ui::does_not_own] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "does_not_own");
		s.fixed_ui_text[fixed_ui::controls] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "controls");
		s.fixed_ui_text[fixed_ui::does_not_control] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "does_not_control");
		s.fixed_ui_text[fixed_ui::total_blockade] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "total_blockade");
		s.fixed_ui_text[fixed_ui::a_core_in] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_core_in");
		s.fixed_ui_text[fixed_ui::a_core_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_core_of");
		s.fixed_ui_text[fixed_ui::percentage_reb_control] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "percentage_reb_control");
		s.fixed_ui_text[fixed_ui::num_of_reb_control] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_reb_control");
		s.fixed_ui_text[fixed_ui::num_owned_provinces] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_owned_provinces");
		s.fixed_ui_text[fixed_ui::num_provinces_owned_by] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_provinces_owned_by");
		s.fixed_ui_text[fixed_ui::num_of_ports] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_ports");
		s.fixed_ui_text[fixed_ui::num_of_allies] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_allies");
		s.fixed_ui_text[fixed_ui::num_of_vassals] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_vassals");
		s.fixed_ui_text[fixed_ui::owned_by] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owned_by");
		s.fixed_ui_text[fixed_ui::exists] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "exists");
		s.fixed_ui_text[fixed_ui::does_not_exist] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "does_not_exist");
		s.fixed_ui_text[fixed_ui::set] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "set");
		s.fixed_ui_text[fixed_ui::fx_in] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in");
		s.fixed_ui_text[fixed_ui::a_casus_belli_against] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_casus_belli_against");
		s.fixed_ui_text[fixed_ui::military_access_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "military_access_with");
		s.fixed_ui_text[fixed_ui::prestige_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "prestige_of");
		s.fixed_ui_text[fixed_ui::a_railroad] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_railroad");
		s.fixed_ui_text[fixed_ui::a_fort] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_fort");
		s.fixed_ui_text[fixed_ui::a_naval_base] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_naval_base");
		s.fixed_ui_text[fixed_ui::a_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_factory");
		s.fixed_ui_text[fixed_ui::empty] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "empty");
		s.fixed_ui_text[fixed_ui::blockaded] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "blockaded");
		s.fixed_ui_text[fixed_ui::national_modifier] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "national_modifier");
		s.fixed_ui_text[fixed_ui::provincial_modifier] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "provincial_modifier");
		s.fixed_ui_text[fixed_ui::part_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "part_of");
		s.fixed_ui_text[fixed_ui::a_border_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_border_with");
		s.fixed_ui_text[fixed_ui::units_in_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "units_in_province");
		s.fixed_ui_text[fixed_ui::at_war_against] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "at_war_against");
		s.fixed_ui_text[fixed_ui::num_of_divisions] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_divisions");
		s.fixed_ui_text[fixed_ui::an_ongoing_battle] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_ongoing_battle");
		s.fixed_ui_text[fixed_ui::cmp_has_lt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_lt");
		s.fixed_ui_text[fixed_ui::cmp_has_gt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_gt");
		s.fixed_ui_text[fixed_ui::cmp_has_ge] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_ge");
		s.fixed_ui_text[fixed_ui::cmp_has_le] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cmp_has_le");
		s.fixed_ui_text[fixed_ui::percentage_unowned_cores] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "percentage_unowned_cores");
		s.fixed_ui_text[fixed_ui::a_vassal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_vassal");
		s.fixed_ui_text[fixed_ui::ruling_party_ideology] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ruling_party_ideology");
		s.fixed_ui_text[fixed_ui::ruling_party] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ruling_party");
		s.fixed_ui_text[fixed_ui::enabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "enabled");
		s.fixed_ui_text[fixed_ui::political_reform_desire] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "political_reform_desire");
		s.fixed_ui_text[fixed_ui::social_reform_desire] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "social_reform_desire");
		s.fixed_ui_text[fixed_ui::num_of_ships] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_ships");
		s.fixed_ui_text[fixed_ui::crime_percent] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "crime_percent");
		s.fixed_ui_text[fixed_ui::national_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "national_religion");
		s.fixed_ui_text[fixed_ui::member_of_nat_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "member_of_nat_religion");
		s.fixed_ui_text[fixed_ui::dominant_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "dominant_religion");
		s.fixed_ui_text[fixed_ui::this_pop_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_pop_culture");
		s.fixed_ui_text[fixed_ui::this_nation_primary_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nation_primary_culture");
		s.fixed_ui_text[fixed_ui::coastal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "coastal");
		s.fixed_ui_text[fixed_ui::in_sphere_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in_sphere_of");
		s.fixed_ui_text[fixed_ui::a_producer_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_producer_of");
		s.fixed_ui_text[fixed_ui::next_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "next_reform");
		s.fixed_ui_text[fixed_ui::always] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "always");
		s.fixed_ui_text[fixed_ui::never] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "never");
		s.fixed_ui_text[fixed_ui::percentage_recruited] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "percentage_recruited");
		s.fixed_ui_text[fixed_ui::in_cultural_core_prov] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in_cultural_core_prov");
		s.fixed_ui_text[fixed_ui::nationalism] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nationalism");
		s.fixed_ui_text[fixed_ui::overseas] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "overseas");
		s.fixed_ui_text[fixed_ui::controlled_by_rebel] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "controlled_by_rebel");
		s.fixed_ui_text[fixed_ui::controlled_by] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "controlled_by");
		s.fixed_ui_text[fixed_ui::state_capital] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "state_capital");
		s.fixed_ui_text[fixed_ui::a_truce_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_truce_with");
		s.fixed_ui_text[fixed_ui::population] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "population");
		s.fixed_ui_text[fixed_ui::size] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "size");
		s.fixed_ui_text[fixed_ui::pops_of_type] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pops_of_type");
		s.fixed_ui_text[fixed_ui::of_type] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "of_type");
		s.fixed_ui_text[fixed_ui::ai_controlled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ai_controlled");
		s.fixed_ui_text[fixed_ui::a_leader_named] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_leader_named");
		s.fixed_ui_text[fixed_ui::a_possible_vassal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_possible_vassal");
		s.fixed_ui_text[fixed_ui::a_vassal_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_vassal_of");
		s.fixed_ui_text[fixed_ui::a_substate_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_substate_of");
		s.fixed_ui_text[fixed_ui::allied_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "allied_to");
		s.fixed_ui_text[fixed_ui::has_recently_lost_war] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "has_recently_lost_war");
		s.fixed_ui_text[fixed_ui::has_not_recently_lost_war] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "has_not_recently_lost_war");
		s.fixed_ui_text[fixed_ui::mobilized] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "mobilized");
		s.fixed_ui_text[fixed_ui::mobilization_size] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "mobilization_size");
		s.fixed_ui_text[fixed_ui::admin_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "admin_spending");
		s.fixed_ui_text[fixed_ui::greater_than_edu_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "greater_than_edu_spending");
		s.fixed_ui_text[fixed_ui::support_for_rp] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "support_for_rp");
		s.fixed_ui_text[fixed_ui::colonial] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "colonial");
		s.fixed_ui_text[fixed_ui::in_default_to] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in_default_to");
		s.fixed_ui_text[fixed_ui::num_of_ports_connected] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_of_ports_connected");
		s.fixed_ui_text[fixed_ui::holding_an_election] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "holding_an_election");
		s.fixed_ui_text[fixed_ui::set_globally] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "set_globally");
		s.fixed_ui_text[fixed_ui::national_value] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "national_value");
		s.fixed_ui_text[fixed_ui::military_score] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "military_score");
		s.fixed_ui_text[fixed_ui::military_score_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "military_score_of");
		s.fixed_ui_text[fixed_ui::industrial_score_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "industrial_score_of");
		s.fixed_ui_text[fixed_ui::industrial_score] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "industrial_score");
		s.fixed_ui_text[fixed_ui::civilized] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "civilized");
		s.fixed_ui_text[fixed_ui::percent_occupied] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "percent_occupied");
		s.fixed_ui_text[fixed_ui::rich_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_tax");
		s.fixed_ui_text[fixed_ui::middle_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_tax");
		s.fixed_ui_text[fixed_ui::poor_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_tax");
		s.fixed_ui_text[fixed_ui::social_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "soc_spending");
		s.fixed_ui_text[fixed_ui::edu_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "edu_spending");
		s.fixed_ui_text[fixed_ui::mil_spending] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "mil_spending");
		s.fixed_ui_text[fixed_ui::colonies] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "colonies");
		s.fixed_ui_text[fixed_ui::dominant_ideology] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "dominant_ideology");
		s.fixed_ui_text[fixed_ui::dominant_issue] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "dominant_issue");
		s.fixed_ui_text[fixed_ui::poor_militancy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_militancy");
		s.fixed_ui_text[fixed_ui::middle_militancy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_militancy");
		s.fixed_ui_text[fixed_ui::rich_militancy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_militancy");
		s.fixed_ui_text[fixed_ui::gt_poor_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "gt_poor_tax");
		s.fixed_ui_text[fixed_ui::cultural_union] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cultural_union");
		s.fixed_ui_text[fixed_ui::same_cultural_union] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "same_cultural_union");
		s.fixed_ui_text[fixed_ui::non_accepted_pops] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "non_accepted_pops");
		s.fixed_ui_text[fixed_ui::num_substates] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_substates");
		s.fixed_ui_text[fixed_ui::num_vassals_no_substates] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_vassals_no_substates");
		s.fixed_ui_text[fixed_ui::num_regiments] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_regiments");
		s.fixed_ui_text[fixed_ui::num_regiments_of] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_regiments_of");
		s.fixed_ui_text[fixed_ui::fabricating_on] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fabricating_on");
		s.fixed_ui_text[fixed_ui::cb_discovered] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cb_discovered");
		s.fixed_ui_text[fixed_ui::cb_not_discovered] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cb_not_discovered");
		s.fixed_ui_text[fixed_ui::cb_progress] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cb_progress");
		s.fixed_ui_text[fixed_ui::civ_progress] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "civ_progress");
		s.fixed_ui_text[fixed_ui::constructing_a] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "constructing_a");
		s.fixed_ui_text[fixed_ui::casus_belli] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "casus_belli");
		s.fixed_ui_text[fixed_ui::nation_in_scope] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nation_in_scope");
		s.fixed_ui_text[fixed_ui::a_substate] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_substate");
		s.fixed_ui_text[fixed_ui::gw_enabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "gw_enabled");
		s.fixed_ui_text[fixed_ui::gw_not_enabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "gw_not_enabled");
		s.fixed_ui_text[fixed_ui::ww_enabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ww_enabled");
		s.fixed_ui_text[fixed_ui::ww_not_enabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ww_not_enabled");
		s.fixed_ui_text[fixed_ui::can_perform_nationalization] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "can_perform_nationalization");
		s.fixed_ui_text[fixed_ui::cannot_perform_nationalization] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cannot_perform_nationalization");
		s.fixed_ui_text[fixed_ui::in_sphere] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "in_sphere");
		s.fixed_ui_text[fixed_ui::num_states] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_states");
		s.fixed_ui_text[fixed_ui::a_releasable_vassal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_releasable_vassal");
		s.fixed_ui_text[fixed_ui::recent_immigration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "recent_immigration");
		s.fixed_ui_text[fixed_ui::num_control_days] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "num_control_days");
		s.fixed_ui_text[fixed_ui::disarmed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "disarmed");
		s.fixed_ui_text[fixed_ui::social_mov_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "social_mov_support");
		s.fixed_ui_text[fixed_ui::political_mov_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "political_mov_support");
		s.fixed_ui_text[fixed_ui::a_member_of_social_mov] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_member_of_social_mov");
		s.fixed_ui_text[fixed_ui::a_member_of_political_mov] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "a_member_of_political_mov");
		s.fixed_ui_text[fixed_ui::cultural_sphere_members] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "cultural_sphere_members");
		s.fixed_ui_text[fixed_ui::pops] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pops");
		s.fixed_ui_text[fixed_ui::this_pop_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_pop_religion");
		s.fixed_ui_text[fixed_ui::pops_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pops_with");
		s.fixed_ui_text[fixed_ui::life_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "life_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::everyday_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "everyday_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::luxury_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "luxury_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::present_in_state] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "present_in_state");
		s.fixed_ui_text[fixed_ui::flashpoint] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "flashpoint");
		s.fixed_ui_text[fixed_ui::an_ongoing_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "an_ongoing_crisis");
		s.fixed_ui_text[fixed_ui::there] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "there");
		s.fixed_ui_text[fixed_ui::current_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "current_crisis");
		s.fixed_ui_text[fixed_ui::liberation_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "liberation_crisis");
		s.fixed_ui_text[fixed_ui::claim_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "claim_crisis");
		s.fixed_ui_text[fixed_ui::involved_in_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "involved_in_crisis");
		s.fixed_ui_text[fixed_ui::poor_life_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_life_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::poor_everyday_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_everyday_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::poor_luxury_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "poor_luxury_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::middle_life_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_life_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::middle_everyday_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_everyday_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::middle_luxury_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "middle_luxury_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::rich_life_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_life_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::rich_everyday_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_everyday_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::rich_luxury_needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rich_luxury_needs_satisfaction");
		s.fixed_ui_text[fixed_ui::dip_influence_over] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "dip_influence_over");
		s.fixed_ui_text[fixed_ui::relationship_with] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "relationship_with");
		s.fixed_ui_text[fixed_ui::this_pop_type] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_pop_type");
		s.fixed_ui_text[fixed_ui::nat_variable] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "nat_variable");
		s.fixed_ui_text[fixed_ui::support_in_uh] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "support_in_uh");
		s.fixed_ui_text[fixed_ui::support_in] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "support_in");
		s.fixed_ui_text[fixed_ui::scope_province] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "scope_province");
		s.fixed_ui_text[fixed_ui::able_build_rr] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "able_build_rr");
		s.fixed_ui_text[fixed_ui::able_build_fort] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "able_build_fort");
		s.fixed_ui_text[fixed_ui::able_build_naval_base] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "able_build_naval_base");
		s.fixed_ui_text[fixed_ui::work] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "work");
		s.fixed_ui_text[fixed_ui::available_for] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "available_for");
		s.fixed_ui_text[fixed_ui::support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "support");
		s.fixed_ui_text[fixed_ui::percentage] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "percentage");
		s.fixed_ui_text[fixed_ui::stockpile] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "stockpile");
		s.fixed_ui_text[fixed_ui::this_nat_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "this_nat_religion");
		s.fixed_ui_text[fixed_ui::from_nat_religion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "from_nat_religion");
		s.fixed_ui_text[fixed_ui::traditional_academic] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "traditional_academic");
		s.fixed_ui_text[fixed_ui::base_plus] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "base_plus");
		s.fixed_ui_text[fixed_ui::base_times] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "base_times");
		s.fixed_ui_text[fixed_ui::chance] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "chance");
		s.fixed_ui_text[fixed_ui::reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "reform");
		s.fixed_ui_text[fixed_ui::enable_crime_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ENABLE_CRIME_TECH");
		s.fixed_ui_text[fixed_ui::activate_goods] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ACTIVATE_GOODS");
		s.fixed_ui_text[fixed_ui::gas_attack_cap] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "gas_attack_capability");
		s.fixed_ui_text[fixed_ui::gas_defence_cap] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "gas_defense_capability");
		s.fixed_ui_text[fixed_ui::tech_activation_year] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECHNOLOGY_ACTIVATION_YEAR");
		s.fixed_ui_text[fixed_ui::tech_research_points] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECHNOLOGY_RESEARCH_POINTS");
		s.fixed_ui_text[fixed_ui::tech_rebel_org_gain] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECH_REBEL_ORG_GAIN");
		s.fixed_ui_text[fixed_ui::rgo_output_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RGO_OUTPUT_TECH");
		s.fixed_ui_text[fixed_ui::rgo_throughput_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RGO_THROUGHPUT_TECH");
		s.fixed_ui_text[fixed_ui::factory_input_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_INPUT_TECH");
		s.fixed_ui_text[fixed_ui::factory_output_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_OUTPUT_TECH");
		s.fixed_ui_text[fixed_ui::factory_throughput_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_THROUGHPUT_TECH");
		s.fixed_ui_text[fixed_ui::artisan_input_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ARTISAN_INPUT_TECH");
		s.fixed_ui_text[fixed_ui::artisan_output_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ARTISAN_OUTPUT_TECH");
		s.fixed_ui_text[fixed_ui::artisan_throughput_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ARTISAN_THROUGHPUT_TECH");
		s.fixed_ui_text[fixed_ui::unit_defence] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_defence");
		s.fixed_ui_text[fixed_ui::unit_hull] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_hull");
		s.fixed_ui_text[fixed_ui::unit_attack] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_attack");
		s.fixed_ui_text[fixed_ui::unit_gun_power] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_gun_power");
		s.fixed_ui_text[fixed_ui::unit_reconnaissance] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_reconnaissance");
		s.fixed_ui_text[fixed_ui::unit_fire_range] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_fire_range");
		s.fixed_ui_text[fixed_ui::unit_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_support");
		s.fixed_ui_text[fixed_ui::unit_torpedo_attack] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_torpedo_attack");
		s.fixed_ui_text[fixed_ui::unit_maneuver] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_maneuver");
		s.fixed_ui_text[fixed_ui::unit_evasion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_evasion");
		s.fixed_ui_text[fixed_ui::unit_speed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_speed");
		s.fixed_ui_text[fixed_ui::unit_organization] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_organization");
		s.fixed_ui_text[fixed_ui::unit_build_time] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_build_time");
		s.fixed_ui_text[fixed_ui::unit_supply_consumption] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_supply_consumption");
		s.fixed_ui_text[fixed_ui::unit_strength] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_strength");
		s.fixed_ui_text[fixed_ui::unit_siege] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_siege");
		s.fixed_ui_text[fixed_ui::unit_discipline] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "unit_discipline");
		s.fixed_ui_text[fixed_ui::disabled] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "disabled");
		s.fixed_ui_text[fixed_ui::tx_day] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "day");
		s.fixed_ui_text[fixed_ui::shared_prestige_tech] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "SHARED_PRESTIGE_TECH");
		s.fixed_ui_text[fixed_ui::demands_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "demands_label");
		s.fixed_ui_text[fixed_ui::crisis_title] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_TITLE_COUNTRY");
		s.fixed_ui_text[fixed_ui::crisis_colonize] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_DESCRIPTION_COLONIZE");
		s.fixed_ui_text[fixed_ui::crisis_influence] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_DESCRIPTION_INFLUENCE");
		s.fixed_ui_text[fixed_ui::crisis_liberation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_DESCRIPTION_LIBERATION");
		s.fixed_ui_text[fixed_ui::crisis_reclaim] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_DESCRIPTION_RECLAIM");
		s.fixed_ui_text[fixed_ui::no_crisis] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "HAS_NO_CRISIS");
		s.fixed_ui_text[fixed_ui::crisis_temperature] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_TEMPERATURE");
		s.fixed_ui_text[fixed_ui::crisis_waiting] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CRISIS_WAITING_ON_BACKER");
		s.fixed_ui_text[fixed_ui::crisis_exists] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "HAS_CRISIS");
		s.fixed_ui_text[fixed_ui::rel_hostile] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_HOSTILE");
		s.fixed_ui_text[fixed_ui::rel_opposed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_OPPOSED");
		s.fixed_ui_text[fixed_ui::rel_neutral] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_NEUTRAL");
		s.fixed_ui_text[fixed_ui::rel_cordial] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_CORDIAL");
		s.fixed_ui_text[fixed_ui::rel_friendly] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_FRIENDLY");
		s.fixed_ui_text[fixed_ui::rel_sphere] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REL_SPHERE_OF_INFLUENCE");
		s.fixed_ui_text[fixed_ui::brigades] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BE_ARMY");
		s.fixed_ui_text[fixed_ui::warships] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BE_NAVY");
		s.fixed_ui_text[fixed_ui::truce_lasts_until] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TRUCE_LASTS_UNTIL");
		s.fixed_ui_text[fixed_ui::against] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "DIPLOMACY_AGAINST");
		s.fixed_ui_text[fixed_ui::make_alliance_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ALLIANCE_BUTTON");
		s.fixed_ui_text[fixed_ui::cancel_alliance_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CANCELALLIANCE_BUTTON");
		s.fixed_ui_text[fixed_ui::call_ally_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CALLALLY_BUTTON");
		s.fixed_ui_text[fixed_ui::expel_advisors_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "EXPELADVISORS_BUTTON");
		s.fixed_ui_text[fixed_ui::ban_embassy_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BANEMBASSY_BUTTON");
		s.fixed_ui_text[fixed_ui::justify_war_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MAKE_CB_BUTTON");
		s.fixed_ui_text[fixed_ui::declare_war_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WAR_BUTTON");
		s.fixed_ui_text[fixed_ui::offer_peace_button] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PEACE_BUTTON");
		s.fixed_ui_text[fixed_ui::show_empty_states] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PRODUCTION_SHOW_EMPTY_STATES");
		s.fixed_ui_text[fixed_ui::hide_empty_states] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PRODUCTION_HIDE_EMPTY_STATES");
		s.fixed_ui_text[fixed_ui::closed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PRODUCTION_CLOSED");
		s.fixed_ui_text[fixed_ui::great_powers] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "great_powers");
		s.fixed_ui_text[fixed_ui::build] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECT_BUILD");
		s.fixed_ui_text[fixed_ui::reopen] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECT_REOPEN");
		s.fixed_ui_text[fixed_ui::expand] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECT_EXPAND");
		s.fixed_ui_text[fixed_ui::exports] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "exports");
		s.fixed_ui_text[fixed_ui::imports] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "imports");
		s.fixed_ui_text[fixed_ui::demand_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "demand_label");
		s.fixed_ui_text[fixed_ui::supply_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "supply_label");
		s.fixed_ui_text[fixed_ui::fixed_income] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fixed_income");
		s.fixed_ui_text[fixed_ui::variable_expenses] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "variable_expenses");
		s.fixed_ui_text[fixed_ui::total_debt] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_TOTAL_DEBT");
		s.fixed_ui_text[fixed_ui::borrowing_and_saving] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "borrowing_saving");
		s.fixed_ui_text[fixed_ui::pie_no_needs] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pie_no_needs");
		s.fixed_ui_text[fixed_ui::pie_ln] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pie_ln");
		s.fixed_ui_text[fixed_ui::pie_en] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pie_en");
		s.fixed_ui_text[fixed_ui::pie_lx] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pie_lx");
		s.fixed_ui_text[fixed_ui::no_pops_of_type] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_POPS_OF_TYPE");
		s.fixed_ui_text[fixed_ui::b_poor_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_TAX_POOR");
		s.fixed_ui_text[fixed_ui::b_middle_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_TAX_MIDDLE");
		s.fixed_ui_text[fixed_ui::b_rich_tax] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_TAX_RICH");
		s.fixed_ui_text[fixed_ui::tariffs] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_TARIFFS");
		s.fixed_ui_text[fixed_ui::interest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "INTEREST");
		s.fixed_ui_text[fixed_ui::national_stockpile] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUDGET_NATIONAL_STOCKPILE");
		s.fixed_ui_text[fixed_ui::allowed_build_railroad] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "BUILDING_NO_RAILWAYS");
		s.fixed_ui_text[fixed_ui::level_less_than] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "level_less_than");
		s.fixed_ui_text[fixed_ui::rail_tech_prerequisite] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rail_tech_prerequisite");
		s.fixed_ui_text[fixed_ui::no_other_naval_base] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "no_other_naval_base");
		s.fixed_ui_text[fixed_ui::is_coastal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "is_coastal");
		s.fixed_ui_text[fixed_ui::bankruptcy_warning] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "bankrupcy_warning");
		s.fixed_ui_text[fixed_ui::nationalist_movement] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NATIONALIST_LIBERATION_MOVEMENT");
		s.fixed_ui_text[fixed_ui::pop_size_growth] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_growth");
		s.fixed_ui_text[fixed_ui::pop_size_combat] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_combat");
		s.fixed_ui_text[fixed_ui::pop_size_type_change] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_type_change");
		s.fixed_ui_text[fixed_ui::pop_size_assimilation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_assimilation");
		s.fixed_ui_text[fixed_ui::pop_size_migration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_migration");
		s.fixed_ui_text[fixed_ui::pop_size_emigration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "pop_size_emigration");
		s.fixed_ui_text[fixed_ui::goto_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "GOTO_GOTO");
		s.fixed_ui_text[fixed_ui::fabricate_title] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MAKE_CBTITLE");
		s.fixed_ui_text[fixed_ui::fabricate_description] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CB_CREATION_DETAIL");
		s.fixed_ui_text[fixed_ui::fabrication_condition] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "fabrication_condition");
		s.fixed_ui_text[fixed_ui::tech_researched_header] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECH_ONCE_HEADER");
		s.fixed_ui_text[fixed_ui::tech_condition_previous] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "tech_condition_previous");
		s.fixed_ui_text[fixed_ui::tech_condition_year] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "tech_condition_year");
		s.fixed_ui_text[fixed_ui::tech_condition_not_done] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "tech_condition_not_done");
		s.fixed_ui_text[fixed_ui::automate_option] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "automate_option");
		s.fixed_ui_text[fixed_ui::monthly_chance] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "monthly_chance");
		s.fixed_ui_text[fixed_ui::importance_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "importance_label");
		s.fixed_ui_text[fixed_ui::message_type_discard] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_type_discard");
		s.fixed_ui_text[fixed_ui::message_type_log] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_type_log");
		s.fixed_ui_text[fixed_ui::message_type_popup] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_type_popup");
		s.fixed_ui_text[fixed_ui::message_type_pause] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_type_pause");
		s.fixed_ui_text[fixed_ui::message_group_self] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_self");
		s.fixed_ui_text[fixed_ui::message_group_neighbors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_neighbors");
		s.fixed_ui_text[fixed_ui::message_group_sphere_members] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_sphere_members");
		s.fixed_ui_text[fixed_ui::message_group_vassals] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_vassals");
		s.fixed_ui_text[fixed_ui::message_group_allies] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_allies");
		s.fixed_ui_text[fixed_ui::message_group_great_powers] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_great_powers");
		s.fixed_ui_text[fixed_ui::message_group_sphere_leader] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_sphere_leader");
		s.fixed_ui_text[fixed_ui::message_group_overlord] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "message_group_overlord");
		s.fixed_ui_text[fixed_ui::message_settings] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MENU_BAR_MESSAGE_SETTINGS");
		s.fixed_ui_text[fixed_ui::find_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "GOTO_SEARCH_COUNTRIES_AND_PROVINCES");
		s.fixed_ui_text[fixed_ui::window_mode_one] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WINDOW_MODE_ONE");
		s.fixed_ui_text[fixed_ui::window_mode_two] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WINDOW_MODE_TWO");
		s.fixed_ui_text[fixed_ui::projection_one] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTION_ONE");
		s.fixed_ui_text[fixed_ui::projection_two] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTION_TWO");
		s.fixed_ui_text[fixed_ui::zoom_one] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ZOOM_ONE");
		s.fixed_ui_text[fixed_ui::zoom_two] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ZOOM_TWO");
		s.fixed_ui_text[fixed_ui::cannot_appoint_ruling_party] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POLITICS_CANNOT_SET_RULING_PARTY_RULE");
		s.fixed_ui_text[fixed_ui::party_not_permitted] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PARTY_NOT_PERMITTED");
		s.fixed_ui_text[fixed_ui::party_already_ruling] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PARTY_ALREADY_RULING");
		s.fixed_ui_text[fixed_ui::build_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_build_factory");
		s.fixed_ui_text[fixed_ui::expand_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_expand_factory");
		s.fixed_ui_text[fixed_ui::open_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_open_factory");
		s.fixed_ui_text[fixed_ui::destroy_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_destroy_factory");
		s.fixed_ui_text[fixed_ui::factory_priority] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_factory_priority");
		s.fixed_ui_text[fixed_ui::can_subsidise] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_can_subsidise");
		s.fixed_ui_text[fixed_ui::pop_build_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_build_factory");
		s.fixed_ui_text[fixed_ui::pop_expand_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_expand_factory");
		s.fixed_ui_text[fixed_ui::pop_open_factory] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_open_factory");
		s.fixed_ui_text[fixed_ui::delete_factory_if_no_input] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_delete_factory_if_no_input");
		s.fixed_ui_text[fixed_ui::build_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_build_factory_invest");
		s.fixed_ui_text[fixed_ui::expand_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_expand_factory_invest");
		s.fixed_ui_text[fixed_ui::open_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_open_factory_invest");
		s.fixed_ui_text[fixed_ui::build_railway_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_build_railway_invest");
		s.fixed_ui_text[fixed_ui::can_invest_in_pop_projects] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_can_invest_in_pop_projects");
		s.fixed_ui_text[fixed_ui::pop_build_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_build_factory_invest");
		s.fixed_ui_text[fixed_ui::pop_expand_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_expand_factory_invest");
		s.fixed_ui_text[fixed_ui::pop_open_factory_invest] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_pop_open_factory_invest");
		s.fixed_ui_text[fixed_ui::allow_foreign_investment] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_allow_foreign_investment");
		s.fixed_ui_text[fixed_ui::slavery_allowed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_slavery_allowed");
		s.fixed_ui_text[fixed_ui::build_railway] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "rule_build_railway");
		s.fixed_ui_text[fixed_ui::no_change_party] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_CHANGE_PARTY_TOOLTIP");
		s.fixed_ui_text[fixed_ui::upper_house_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "UPPER_HOUSE_SUPPORT");
		s.fixed_ui_text[fixed_ui::no_more_reform] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_MORE_REFORM");
		s.fixed_ui_text[fixed_ui::reform_next_step] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "REFORM_NEXT_STEP");
		s.fixed_ui_text[fixed_ui::no_assimilation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_ASSIM_NOW");
		s.fixed_ui_text[fixed_ui::assimilation_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_ASSM_FACTORS");
		s.fixed_ui_text[fixed_ui::projected_assimilation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_ASSIMILATION");
		s.fixed_ui_text[fixed_ui::assimilation_scale] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "ASSIMILATION_SCALE");
		s.fixed_ui_text[fixed_ui::factor] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTOR");
		s.fixed_ui_text[fixed_ui::no_conversion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_CONVERSION");
		s.fixed_ui_text[fixed_ui::conversion_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_CONVERSION_FACTORS");
		s.fixed_ui_text[fixed_ui::projected_conversion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_CONVERSION");
		s.fixed_ui_text[fixed_ui::conversion_scale] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CONVERSION_SCALE");
		s.fixed_ui_text[fixed_ui::no_promotion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_PROMOTION");
		s.fixed_ui_text[fixed_ui::no_demotion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_DEMOTION");
		s.fixed_ui_text[fixed_ui::no_migration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_MIGRATION");
		s.fixed_ui_text[fixed_ui::no_emigration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_EMIGRATION");
		s.fixed_ui_text[fixed_ui::no_colonial_migration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_CMIGRATION");
		s.fixed_ui_text[fixed_ui::projected_promotion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_PROMOTION");
		s.fixed_ui_text[fixed_ui::projected_demotion] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_DEMOTION");
		s.fixed_ui_text[fixed_ui::projected_migration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_MIGRATION");
		s.fixed_ui_text[fixed_ui::projected_emigration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_EMIGRATION");
		s.fixed_ui_text[fixed_ui::promotion_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_PROMOTION_FACTORS");
		s.fixed_ui_text[fixed_ui::demotion_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_DEMOTION_FACTORS");
		s.fixed_ui_text[fixed_ui::migration_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_INTERNAL_MIGRATION_FACTORS");
		s.fixed_ui_text[fixed_ui::emigration_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POP_EXTERNAL_MIGRATION_FACTORS");
		s.fixed_ui_text[fixed_ui::national_focus] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "OL_VIEW_NATFOCUS_HEADER");
		s.fixed_ui_text[fixed_ui::promotion_scale] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROMOTION_SCALE");
		s.fixed_ui_text[fixed_ui::admin_efficiency] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MODIFIER_ADMINISTRATIVE_EFFICIENCY");
		s.fixed_ui_text[fixed_ui::emigration_scale] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "EMIGRATION_SCALE");
		s.fixed_ui_text[fixed_ui::parenthetical_squared] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PAREN_SQUARED");
		s.fixed_ui_text[fixed_ui::tech_edu_efficiency] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECH_EDU_EFFICIENCY");
		s.fixed_ui_text[fixed_ui::literacy_change_speed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LIT_CHANGE_SPEED");
		s.fixed_ui_text[fixed_ui::clergy_amount] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CLERGY_AMOUNT");
		s.fixed_ui_text[fixed_ui::projected_literacy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_LIT");
		s.fixed_ui_text[fixed_ui::lit_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LIT_FACTORS");
		s.fixed_ui_text[fixed_ui::projected_militancy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_MIL");
		s.fixed_ui_text[fixed_ui::militancy_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MIL_FACTORS");
		s.fixed_ui_text[fixed_ui::needs_satisfaction] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NEEDS_SATISFACTION");
		s.fixed_ui_text[fixed_ui::non_accepted_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NON_ACCEPTED_MOD");
		s.fixed_ui_text[fixed_ui::owner_seperatism] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TECH_OWNER_SEPERATISM");
		s.fixed_ui_text[fixed_ui::base_non_accepted_mil] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NON_ACCEPTED_MIL_MOD");
		s.fixed_ui_text[fixed_ui::conservative_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "C_SUPPORT");
		s.fixed_ui_text[fixed_ui::ruling_party_support] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "RP_SUPPORT");
		s.fixed_ui_text[fixed_ui::projected_consciouness] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROJECTED_CON");
		s.fixed_ui_text[fixed_ui::consciousness_factors] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "CON_FACTORS");
		s.fixed_ui_text[fixed_ui::literacy_factor] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LIT_FACTOR");
		s.fixed_ui_text[fixed_ui::colonial_factor] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "COL_FACTOR");
		s.fixed_ui_text[fixed_ui::poor_clergy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "POOR_CLERGY");
		s.fixed_ui_text[fixed_ui::mid_rich_clergy] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "MID_RICH_CLERGY");
		s.fixed_ui_text[fixed_ui::lux_satisfaction_factor] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "LUX_SATISFACTION_FACTOR");
		s.fixed_ui_text[fixed_ui::weight] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "WEIGHT");
		s.fixed_ui_text[fixed_ui::national_political_reform_desire] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "OWNER_PR_DESIRE");
		s.fixed_ui_text[fixed_ui::national_social_reform_desire] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "OWNER_SR_DESIRE");
		s.fixed_ui_text[fixed_ui::parenthetical_national_modifier] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PAREN_NAT_MOD");
		s.fixed_ui_text[fixed_ui::parenthetical_provincial_modifier] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PAREN_PROV_MOD");
		s.fixed_ui_text[fixed_ui::profit] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "PROFIT");
		s.fixed_ui_text[fixed_ui::total_cost] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "TOTAL_COST");
		s.fixed_ui_text[fixed_ui::factory_unlocked] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_UNLOCKED");
		s.fixed_ui_text[fixed_ui::foreign_investment_allowed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "F_INVESTMENT_ALLOWED");
		s.fixed_ui_text[fixed_ui::factory_building_allowed] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "G_BUILDING_ALLOWED");
		s.fixed_ui_text[fixed_ui::factory_limit] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_LIMIT");
		s.fixed_ui_text[fixed_ui::state_is_coastal] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "STATE_IS_COASTAL");
		s.fixed_ui_text[fixed_ui::factory_already_present] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FACTORY_ALREADY_PRESENT");
		s.fixed_ui_text[fixed_ui::not_colonial] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NOT_COLONIAL");
		s.fixed_ui_text[fixed_ui::no_focus] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "NO_FOCUS");
		s.fixed_ui_text[fixed_ui::focus_limit] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "FOCUS_LIMIT");
		s.fixed_ui_text[fixed_ui::state_population] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "state_population");
		s.fixed_ui_text[fixed_ui::replace_national_focus] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "replace_national_focus");
		s.fixed_ui_text[fixed_ui::map_legend_culture] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_culture");
		s.fixed_ui_text[fixed_ui::map_legend_political] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_political");
		s.fixed_ui_text[fixed_ui::owner_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "owner_label");
		s.fixed_ui_text[fixed_ui::map_legend_region] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_region");
		s.fixed_ui_text[fixed_ui::map_legend_sphere] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_sphere");
		s.fixed_ui_text[fixed_ui::sphere_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "sphere_label");
		s.fixed_ui_text[fixed_ui::region_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "region_label");
		s.fixed_ui_text[fixed_ui::none] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "none");
		s.fixed_ui_text[fixed_ui::map_legend_population] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_population");
		s.fixed_ui_text[fixed_ui::population_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "population_label");
		s.fixed_ui_text[fixed_ui::map_legend_relations] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_relations");
		s.fixed_ui_text[fixed_ui::map_relation_explanation] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_relation_explanation");
		s.fixed_ui_text[fixed_ui::map_legend_migration] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_migration");
		s.fixed_ui_text[fixed_ui::migration_external_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "migration_external_label_b");
		s.fixed_ui_text[fixed_ui::migration_internal_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "migration_internal_label_b");
		s.fixed_ui_text[fixed_ui::map_legend_infrastructure] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_infrastructure");
		s.fixed_ui_text[fixed_ui::map_legend_rgo] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_rgo");
		s.fixed_ui_text[fixed_ui::all] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "OV_ALL");
		s.fixed_ui_text[fixed_ui::map_legend_prices] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_prices");
		s.fixed_ui_text[fixed_ui::map_legend_production] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_production");
		s.fixed_ui_text[fixed_ui::price_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "price_label");
		s.fixed_ui_text[fixed_ui::production_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "production_label");
		s.fixed_ui_text[fixed_ui::map_legend_voting] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_voting");
		s.fixed_ui_text[fixed_ui::map_legend_admin] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "map_legend_admin");
		s.fixed_ui_text[fixed_ui::admin_eff_label] = text_data::get_thread_safe_text_handle(s.gui_m.text_data_sequences, "admin_eff_label");
	}
}
